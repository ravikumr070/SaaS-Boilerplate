// <auto-generated />
using System;
using Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations.Applications
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250710103255_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.EmailLog.EmailLogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Customer_EmailBCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Email_Log_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email_Subject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email_body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Email_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMSG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMailSent")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Emaillog");
                });

            modelBuilder.Entity("Domain.EmailSend.EmailSendModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Customer_EmailBCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Email_Send_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email_Subject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email_body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Email_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMSG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmailSend");
                });

            modelBuilder.Entity("Domain.LogException.LogExceptionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ActionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ErrorDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ExtraData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerException")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LogException");
                });

            modelBuilder.Entity("Domain.MenuMaster.MenuMasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MenuMaster");
                });

            modelBuilder.Entity("Domain.RoleMenuMaster.RoleMenuMasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("RoleMenuMaster");
                });

            modelBuilder.Entity("Domain.SiteSettings.SiteSettingsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("AddToBasketPosition")
                        .HasColumnType("int");

                    b.Property<bool>("AddtoBasketNotification")
                        .HasColumnType("bit");

                    b.Property<string>("AgedDebtBreakdownItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllowEditingDeliveryAddressONCheckout")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPopularSearchesAndLastUserSearches")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowRegistration")
                        .HasColumnType("bit");

                    b.Property<bool>("AnchorLayout")
                        .HasColumnType("bit");

                    b.Property<bool>("ApplyVATtoDelivery")
                        .HasColumnType("bit");

                    b.Property<int>("AttributeFilterView")
                        .HasColumnType("int");

                    b.Property<string>("AttributeTabText")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("BackOrderSetting")
                        .HasColumnType("int");

                    b.Property<string>("BackOrderText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BackOrderTextColour")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("BaseCountry")
                        .HasColumnType("int");

                    b.Property<string>("BasketArchive")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("BasketCheckoutAlert")
                        .HasColumnType("int");

                    b.Property<string>("BasketCheckoutAlertText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("BasketPersonalisationDisplay")
                        .HasColumnType("bit");

                    b.Property<string>("BingWebmasterTrackingId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Brand")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BrandPageDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BrandPageTitle")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BrandPageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BusinessDays")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("CASEQTY")
                        .HasColumnType("bit");

                    b.Property<bool?>("CASEQTY1")
                        .HasColumnType("bit");

                    b.Property<bool>("CalculateDefaultPrice")
                        .HasColumnType("bit");

                    b.Property<string>("CalculateVatFrom")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CalculatedUnits")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("CalculatedUnitsGridRestricted")
                        .HasColumnType("bit");

                    b.Property<bool>("Calculateshowoftoplevelmenu")
                        .HasColumnType("bit");

                    b.Property<string>("CatDescTextColor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CategoryLayoutOption")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryMenuCount")
                        .HasColumnType("int");

                    b.Property<bool>("CategoryViewDropdownVarients")
                        .HasColumnType("bit");

                    b.Property<int>("ChannableFrequency")
                        .HasColumnType("int");

                    b.Property<bool>("ChannableImport")
                        .HasColumnType("bit");

                    b.Property<string>("ChannableToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannableURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckoutMessage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("CheckoutPageType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Checkoutmessage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("ChekoutEditableAddr")
                        .HasColumnType("bit");

                    b.Property<string>("CirrusPassword")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CirrusUsername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CivicCookieAPIKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CivicCookieProduct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactUsEmailAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("ContactUsPopUp")
                        .HasColumnType("bit");

                    b.Property<string>("CopyrightText")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<bool>("CreateCustomerRecord")
                        .HasColumnType("bit");

                    b.Property<bool?>("CreateTradeAccountLogin")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditHoldBannerMsg")
                        .HasColumnType("int");

                    b.Property<bool?>("CurencyConversion")
                        .HasColumnType("bit");

                    b.Property<bool?>("CurrencyConversion_AfterLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("CurrencyConversion_BeforeLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("CurrencySymbol")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomContactUsField")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomerAmendCreditLimit")
                        .HasColumnType("bit");

                    b.Property<int>("CustomerCatalogueMode")
                        .HasColumnType("int");

                    b.Property<string>("CustomiseSearchText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DateFormat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("DefaultAutoCategorySortingOrder")
                        .HasColumnType("bigint");

                    b.Property<bool>("DefaultCustomRegistrationForm")
                        .HasColumnType("bit");

                    b.Property<int?>("DefaultSearchSortingOrder")
                        .HasColumnType("int");

                    b.Property<long?>("DefaultSortingField")
                        .HasColumnType("bigint");

                    b.Property<int?>("DeiveryRestrictedBy")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeliverToBillAddress")
                        .HasColumnType("bit");

                    b.Property<string>("Delivery")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("DeliveryAddressAtLogin")
                        .HasColumnType("bit");

                    b.Property<string>("DeliveryAddressZoneDefault")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeliveryBreakdownLevel")
                        .HasColumnType("bit");

                    b.Property<string>("DeliveryDateAlertMessage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeliveryDateLabel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeliveryNoteComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeliveryNoteDispatchCutOff")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("DeliveryNoteDispatchCutOffTime")
                        .HasColumnType("time");

                    b.Property<bool>("DeliveryNoteFutureDeliveryDate")
                        .HasColumnType("bit");

                    b.Property<bool?>("DeliveryOption")
                        .HasColumnType("bit");

                    b.Property<int?>("DeliveryOptionMethod")
                        .HasColumnType("int");

                    b.Property<string>("DemoStoreMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DemoStoreMessageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte>("DetailpageLayout")
                        .HasColumnType("tinyint");

                    b.Property<string>("Detailpagetextcolor1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Detailpagetextcolor2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Detailpagetextcolor3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("DisableLineLevelDeliveryDate")
                        .HasColumnType("bit");

                    b.Property<bool>("DisableLineLevelPO")
                        .HasColumnType("bit");

                    b.Property<bool>("DisablePriceUpdateOnBasket")
                        .HasColumnType("bit");

                    b.Property<bool>("DisableSubTotal")
                        .HasColumnType("bit");

                    b.Property<bool?>("DisplayCategoryAltImages")
                        .HasColumnType("bit");

                    b.Property<string>("Documentation")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DonationAccountType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DonationGiftAidText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DonationsItemDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DonationsSKU")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DonationsSectionText")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DownloadTabOption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DropShipmentSplit")
                        .HasColumnType("int");

                    b.Property<string>("DueStockColour")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("DueStockQty")
                        .HasColumnType("int");

                    b.Property<bool?>("EmableMultipleCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("EmailBCC")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmailFooter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableAbandonedMailfeature")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableAccountAgedDebt")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableAgedDebtBreakdown")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableAgedDebtTable")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableAnotherAddress")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableAttributeTab")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableAuthorisationOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableBackOrderMessage")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableBestSellers")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableBranchName")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableBundleQty")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableBuyOutOfStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableCallForPrice")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableCategoryStockQty")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableCheckoutBillAddress")
                        .HasColumnType("bit");

                    b.Property<byte>("EnableCheckoutEmailAddress")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("EnableCheckoutquestion")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableCirrusCallRecording")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableCivicCookie")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableCommaSeperatedNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableComments")
                        .HasColumnType("bit");

                    b.Property<int?>("EnableCompanyMandatory")
                        .HasColumnType("int");

                    b.Property<bool>("EnableCreditHoldMsgBanner")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableCustomerAlsoBoughtFeature")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableCustomerDueStock")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableCustomerQuestion")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableCustomerRef")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableCustomerRegistration")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableCustomerSpecificeCatalogue")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableCustomerSpecificeProducts")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableDedicatedBrandsPage")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableDeliveryAddressEmails")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableDeliveryDate")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableDemoStoreMessage")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableDescriptionsPhoneOrders")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableDonations")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableDownloadOrdersProductImages")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableDownloadTab")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableDropShipemailsforQuotes")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableDualPrice")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableEmailBackInStock")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableEmailInvoice")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableExistingCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableExtendedUOS")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableFeefoReview")
                        .HasMaxLength(100)
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableFinalDestination")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableFooterEventsLink")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableFooterNewsLink")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableFooterSiteMapLink")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableFreeDeliveryCalculation")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableGoogleTranslater")
                        .HasColumnType("bit");

                    b.Property<int>("EnableGridView")
                        .HasColumnType("int");

                    b.Property<bool>("EnableGridViewSetting")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableGuestCheckout")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableHotJarAnalytics")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableInvoiceOrderComments")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableLatestProducts")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableLinkMultiAccount")
                        .HasColumnType("bit");

                    b.Property<int>("EnableListView")
                        .HasColumnType("int");

                    b.Property<bool?>("EnableLiveChat")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableLocalTax")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableLoyaltyLedger")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableLoyaltyPointsToVoucher")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableMenuDefaultExpanded")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableMinimumOrderByCountry")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableMultiLanguage")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableMultiWarehouse")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableMultipleSKU")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableMyAccountSalesRep")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableNewInvoice")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableNewsforInactiveCus")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableOnCollection")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableOrderSplit")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePAFIntegration")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePaidonResults")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePartFinder")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnablePaymentLimit")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePaymentOfInvoices")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnablePendingBasketMail")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePersonalisation")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePersonalisationMultipleQty")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePointsAwardInCloudfy")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePreLoad")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnablePredictiveSearch")
                        .HasColumnType("bit");

                    b.Property<bool>("EnablePrintBasket")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableProductLedger")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableProductName")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableProductSKU")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableProductSKUBasket")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableProductSocialShring")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnablePunchout")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableQtyChangeAtCheckout")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableQuickOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableRMARequests")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableRedeemPaymentMethod")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableRelatedWhenOutOfStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableReserveStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableReviews")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableRightClick")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableRoundleOnDetails")
                        .HasColumnType("bit");

                    b.Property<byte?>("EnableSalesRepCode")
                        .HasColumnType("tinyint");

                    b.Property<bool>("EnableSelfVATExemption")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableSortingGrid")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableSpecialOffers")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableSpendLimits")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableStockManagement")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableStockQty")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableSuperClass")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableSyrenisCookie")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableTermlyCookie")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableTotalUnit")
                        .HasColumnType("bit");

                    b.Property<int>("EnableTradeView")
                        .HasColumnType("int");

                    b.Property<bool>("EnableTradeViewSetting")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableTrustedShops")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableUserType")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableVatverification")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableViewBasketButton")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableWareHouse")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableYotpoReviews")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableYourPrice")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnablepriceFilter")
                        .HasColumnType("bit");

                    b.Property<bool>("EnhancedErrorValidation")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportTradeView")
                        .HasColumnType("bit");

                    b.Property<bool>("ExternalRefFieldforOrderNumber")
                        .HasColumnType("bit");

                    b.Property<string>("FTPBaseRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPLogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookTrackingID")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FacebookURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Favourites_AfterLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("Favourites_BeforLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("FinalDestinationEmail")
                        .HasColumnType("bit");

                    b.Property<string>("FooterScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterScript_PaidonResult")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FreeDeliveryLevel")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GoogleAnalyticsTrackingID")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("GoogleCustomerReviews")
                        .HasColumnType("bit");

                    b.Property<bool?>("GoogleLangSwitchPosition")
                        .HasColumnType("bit");

                    b.Property<string>("GoogleMapApiKey")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GooglePlusLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("GridAddToBasket")
                        .HasColumnType("bit");

                    b.Property<bool>("GridAddToBasket1")
                        .HasColumnType("bit");

                    b.Property<int>("GridImage")
                        .HasColumnType("int");

                    b.Property<int>("GridImage1")
                        .HasColumnType("int");

                    b.Property<string>("GridLayoutColour1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("GridLayoutColour2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("GridViewAttributeDisplay")
                        .HasColumnType("int");

                    b.Property<int>("GridViewAttributeDisplay1")
                        .HasColumnType("int");

                    b.Property<int?>("Gridpagesize")
                        .HasColumnType("int");

                    b.Property<string>("HeaderBanner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderBannerAltText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("HeaderMenuType")
                        .HasColumnType("int");

                    b.Property<string>("HeaderScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HideCategoryImage")
                        .HasColumnType("bit");

                    b.Property<bool?>("HideDeliveryChangeFromCheckout")
                        .HasColumnType("bit");

                    b.Property<string>("HideOrderButtons")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("HideVoucherCode")
                        .HasColumnType("bit");

                    b.Property<string>("HotjarSnippetVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HotjarTrackingCodeID")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte?>("ImagesLayout")
                        .HasColumnType("tinyint");

                    b.Property<string>("InStockColour")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("IndexRankLabel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InstagramURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceAdd1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceAdd2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceAdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvoiceCompanyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("InvoiceCounty")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvoiceDocName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvoiceFax")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvoicePaymentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvoicePostCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvoiceTel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InvoiceTemplate")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceVatNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("InvoicesManageAvailableBalance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAltTextBlank")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBespokeMenuEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBestSellersFromAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentPasswordRequired")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCustomerEncrypted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnableCapitalisationOnSite")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnableDeliveryByOrderPercentage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnableNewExtendingDelivery")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnableProductReviewsEmailReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnableShipperHQ")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsImageCompressed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLatestProductsFromAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("IsMobileAppLoginAccess")
                        .HasColumnType("int");

                    b.Property<bool>("IsMultiLocationWarning")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNewLayout")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNextDayDelivery")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOfferPriceFromProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPinchToZoom")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuickorderAutocomplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuotesOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegistrationActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSavedBasket")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSpecialOffersFromAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUpdated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUseStockStatusLabel")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVatApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("Ishoverbasket")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSendingMail")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LayoutSelection")
                        .HasColumnType("int");

                    b.Property<int?>("LimitingPredictiveSearch")
                        .HasColumnType("int");

                    b.Property<string>("LinkedInURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LiveChatVisibility")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LoginPageURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LoginToSeePriceText")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MageMenuPromotionalMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mailchimp_apiKey")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mailchimp_listid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Materials")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MerchantId_Paidon")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MerchantIdentifier")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("MinOrderExvat")
                        .HasColumnType("bit");

                    b.Property<int>("MiniBasket")
                        .HasColumnType("int");

                    b.Property<string>("MinimumOrderValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MultiLocationWarningMsg")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("MultiProductImagesOption")
                        .HasColumnType("bit");

                    b.Property<bool>("MultipleCollectionLocation")
                        .HasColumnType("bit");

                    b.Property<string>("NoDeliveryChoiceMessage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NonSaleableMessage")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("OrderMin_MaxErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderReceiptPaymentType")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OrdersEmailAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("Ordertype")
                        .HasColumnType("bit");

                    b.Property<string>("OutofStockColour")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("OverrideDefaultChecksonBasket")
                        .HasColumnType("bit");

                    b.Property<int>("PAFIntegrationResult")
                        .HasColumnType("int");

                    b.Property<int>("PAFIntegrationService")
                        .HasColumnType("int");

                    b.Property<string>("PageBuilderCSSFiles")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PageBuilderFontsFiles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageBuilderJSFiles")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("PartialPaymentOrder")
                        .HasColumnType("int");

                    b.Property<bool>("PaymentMethodPrices")
                        .HasColumnType("bit");

                    b.Property<bool>("PercentageDeliveryCharge_Type")
                        .HasColumnType("bit");

                    b.Property<bool>("PersonalisedLandingPages")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneOrderDescriptionOptions")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("PointsDefaultExpiryPeriod")
                        .HasColumnType("int");

                    b.Property<string>("PointsDefaultExpiryPeriodType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PredictiveSearchAttribute")
                        .HasColumnType("int");

                    b.Property<int?>("PriceDecimalPlace")
                        .HasColumnType("int");

                    b.Property<string>("PricingColour")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrinterestURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("PrioritySetting")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription5Text")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductDescription6Text")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductDetail")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProductIframeZoom")
                        .HasColumnType("int");

                    b.Property<bool>("ProductLayouts_ProductType")
                        .HasColumnType("bit");

                    b.Property<string>("ProductTitleColour")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProductVatMethod")
                        .HasColumnType("int");

                    b.Property<string>("ProductZoom")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("Productlistlayout")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("QTYADD")
                        .HasColumnType("bit");

                    b.Property<bool?>("QTYADD1")
                        .HasColumnType("bit");

                    b.Property<bool?>("QTYBREAK")
                        .HasColumnType("bit");

                    b.Property<bool?>("QTYBREAK1")
                        .HasColumnType("bit");

                    b.Property<string>("QuoteEmailAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("REVIEWS")
                        .HasColumnType("bit");

                    b.Property<bool?>("REVIEWS1")
                        .HasColumnType("bit");

                    b.Property<string>("RRPcurrency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RedeemPaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ReportLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ReserveStockLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RestrictCategoryListview")
                        .HasColumnType("bit");

                    b.Property<string>("RetailPriceLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailPriceLabel1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("SKU")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKU1")
                        .HasColumnType("bit");

                    b.Property<bool?>("STOCK")
                        .HasColumnType("bit");

                    b.Property<bool?>("STOCK1")
                        .HasColumnType("bit");

                    b.Property<string>("SearchableFields")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("SeenCheaperPrice")
                        .HasColumnType("bit");

                    b.Property<string>("SelectCreditBalance")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SelectedBrandDirectory")
                        .HasColumnType("int");

                    b.Property<string>("SelectedTabColour")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SelfVATExemptionComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ShipingTax")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ShowAvailableBlanceChckout")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowBarcode")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowCatBannerHeading")
                        .HasColumnType("bit");

                    b.Property<string>("ShowCategoryDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowCategoryImagesOnLandingPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCollectionAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowDeliveryAddressonQuote")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowDeliveryBreakdown")
                        .HasColumnType("bit");

                    b.Property<string>("ShowDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ShowDualPrices")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmail_CallUs")
                        .HasColumnType("bit");

                    b.Property<int>("ShowFromPrice")
                        .HasColumnType("int");

                    b.Property<int>("ShowFromPrice1")
                        .HasColumnType("int");

                    b.Property<bool?>("ShowHomeLink")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInBasketQuantity")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowMaxOrderQtyOnProductDetailPage")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowOutOfStockItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowPriceIncVat")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowPriceIncVat1")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowPriceWithoutLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowProductInMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowQtyAsQuantityStock")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowRRP")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowRRP1")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowRRPWithStrike")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowRRPWithoutLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowSKUCodeOnDetail")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSaveAmount")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowStockDueDate")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowStockStatusFilter")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowThumbnailWithPredictiveSearch")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowTwoProductInCategoryView")
                        .HasColumnType("bit");

                    b.Property<int?>("Site404Page")
                        .HasColumnType("int");

                    b.Property<string>("SiteCompanyAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SiteFavicon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SiteId")
                        .HasColumnType("bigint");

                    b.Property<string>("SiteLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteNoImageAltText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SitePhoneNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("SiteUnderMaintenance")
                        .HasColumnType("bit");

                    b.Property<string>("SoftCreditLimitMessages")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("SortCategoryByAlphabetically")
                        .HasColumnType("bit");

                    b.Property<bool>("StaticPageSearch")
                        .HasColumnType("bit");

                    b.Property<int>("StockMessageLocation")
                        .HasColumnType("int");

                    b.Property<int>("StockReduction")
                        .HasColumnType("int");

                    b.Property<bool?>("SubscribeMailchimp")
                        .HasColumnType("bit");

                    b.Property<string>("SupCatBgColorCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SuperClassURL")
                        .HasColumnType("bit");

                    b.Property<string>("SyrenisCookieAccessKey")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SyrenisCookieLicenseID")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SyrenisCookieStyleSheet")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Tabbottombordercolour")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TableHeaderBackgroundColour")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TableHeaderTextColour")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TagManagerTrackingId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("TaxCalculationDecimalPlaces")
                        .HasColumnType("int");

                    b.Property<string>("TermlyCookieEmbedId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TermlyManageCookiePreferencesLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TitleTextSize")
                        .HasColumnType("int");

                    b.Property<bool>("TopRowIsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("TradePriceLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradePriceLabel1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Trade_View_Attribute_ID")
                        .HasColumnType("int");

                    b.Property<bool>("TransactionalEmail_DownloadableProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("TransparentHeader")
                        .HasColumnType("bit");

                    b.Property<string>("TrustedShops")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TwitterURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UnitForSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitForWeight")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("V2FallbackScoreLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VideoTabText")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("VimeoLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WelcomeMessageAfterLogin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ZoopimScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("afterFromPriceColor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("beforeFromPriceColor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("hardCreditLimitMessages")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("isShowFooterPaymentLogo")
                        .HasColumnType("bit");

                    b.Property<string>("reCaptchaSecretKey")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("reCaptchaSecretKeyV2")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("reCaptchaSiteKey")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("reCaptchaSiteKeyV2")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<short?>("selectedtab")
                        .HasColumnType("smallint");

                    b.Property<int?>("setDurationAfterAddedbasket")
                        .HasColumnType("int");

                    b.Property<long>("settingsID")
                        .HasColumnType("bigint");

                    b.Property<bool?>("showmSellerOrder")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SiteSettings");
                });

            modelBuilder.Entity("Infrastructure.Auditing.Trail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AuditTrails", "Auditing");
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "Identity");
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Identity");
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "Identity");
                });

            modelBuilder.Entity("Infrastructure.LoginAttempt.LoginAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tenant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameOrEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginAttempt", "Auditing");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Identity");
                });

            modelBuilder.Entity("Domain.MenuMaster.MenuMasterModel", b =>
                {
                    b.HasOne("Domain.MenuMaster.MenuMasterModel", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Domain.RoleMenuMaster.RoleMenuMasterModel", b =>
                {
                    b.HasOne("Domain.MenuMaster.MenuMasterModel", "Menu")
                        .WithMany("RoleMenuMaster")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.MenuMaster.MenuMasterModel", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("RoleMenuMaster");
                });
#pragma warning restore 612, 618
        }
    }
}
